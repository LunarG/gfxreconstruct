/*
** Copyright (c) 2018 Valve Corporation
** Copyright (c) 2018 LunarG, Inc.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/

/*
** This file is generated from the Khronos Vulkan XML API Registry.
**
*/

#ifndef  GFXRECON_GENERATED_LAYER_FUNC_TABLE_H
#define  GFXRECON_GENERATED_LAYER_FUNC_TABLE_H

#include "generated/generated_vulkan_api_call_encoders.h"
#include "layer/custom_vulkan_api_call_encoders.h"
#include "layer/trace_layer.h"
#include "util/defines.h"

#include "vulkan/vulkan.h"

#include <unordered_map>

GFXRECON_BEGIN_NAMESPACE(gfxrecon)

const std::unordered_map<std::string, PFN_vkVoidFunction> func_table = {
    { "vkCreateInstance",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(CreateInstance) },
    { "vkDestroyInstance",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(DestroyInstance) },
    { "vkEnumeratePhysicalDevices",                                                                          reinterpret_cast<PFN_vkVoidFunction>(EnumeratePhysicalDevices) },
    { "vkGetPhysicalDeviceFeatures",                                                                         reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFeatures) },
    { "vkGetPhysicalDeviceFormatProperties",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFormatProperties) },
    { "vkGetPhysicalDeviceImageFormatProperties",                                                            reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceImageFormatProperties) },
    { "vkGetPhysicalDeviceProperties",                                                                       reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceProperties) },
    { "vkGetPhysicalDeviceQueueFamilyProperties",                                                            reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceQueueFamilyProperties) },
    { "vkGetPhysicalDeviceMemoryProperties",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceMemoryProperties) },
    { "vkGetInstanceProcAddr",                                                                               reinterpret_cast<PFN_vkVoidFunction>(GetInstanceProcAddr) },
    { "vkGetDeviceProcAddr",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetDeviceProcAddr) },
    { "vkCreateDevice",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateDevice) },
    { "vkDestroyDevice",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(DestroyDevice) },
    { "vkEnumerateInstanceExtensionProperties",                                                              reinterpret_cast<PFN_vkVoidFunction>(EnumerateInstanceExtensionProperties) },
    { "vkEnumerateDeviceExtensionProperties",                                                                reinterpret_cast<PFN_vkVoidFunction>(EnumerateDeviceExtensionProperties) },
    { "vkEnumerateInstanceLayerProperties",                                                                  reinterpret_cast<PFN_vkVoidFunction>(EnumerateInstanceLayerProperties) },
    { "vkEnumerateDeviceLayerProperties",                                                                    reinterpret_cast<PFN_vkVoidFunction>(EnumerateDeviceLayerProperties) },
    { "vkGetDeviceQueue",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetDeviceQueue) },
    { "vkQueueSubmit",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(QueueSubmit) },
    { "vkQueueWaitIdle",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(QueueWaitIdle) },
    { "vkDeviceWaitIdle",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(DeviceWaitIdle) },
    { "vkAllocateMemory",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(AllocateMemory) },
    { "vkFreeMemory",                                                                                        reinterpret_cast<PFN_vkVoidFunction>(FreeMemory) },
    { "vkMapMemory",                                                                                         reinterpret_cast<PFN_vkVoidFunction>(MapMemory) },
    { "vkUnmapMemory",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(UnmapMemory) },
    { "vkFlushMappedMemoryRanges",                                                                           reinterpret_cast<PFN_vkVoidFunction>(FlushMappedMemoryRanges) },
    { "vkInvalidateMappedMemoryRanges",                                                                      reinterpret_cast<PFN_vkVoidFunction>(InvalidateMappedMemoryRanges) },
    { "vkGetDeviceMemoryCommitment",                                                                         reinterpret_cast<PFN_vkVoidFunction>(GetDeviceMemoryCommitment) },
    { "vkBindBufferMemory",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(BindBufferMemory) },
    { "vkBindImageMemory",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(BindImageMemory) },
    { "vkGetBufferMemoryRequirements",                                                                       reinterpret_cast<PFN_vkVoidFunction>(GetBufferMemoryRequirements) },
    { "vkGetImageMemoryRequirements",                                                                        reinterpret_cast<PFN_vkVoidFunction>(GetImageMemoryRequirements) },
    { "vkGetImageSparseMemoryRequirements",                                                                  reinterpret_cast<PFN_vkVoidFunction>(GetImageSparseMemoryRequirements) },
    { "vkGetPhysicalDeviceSparseImageFormatProperties",                                                      reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSparseImageFormatProperties) },
    { "vkQueueBindSparse",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(QueueBindSparse) },
    { "vkCreateFence",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CreateFence) },
    { "vkDestroyFence",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(DestroyFence) },
    { "vkResetFences",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(ResetFences) },
    { "vkGetFenceStatus",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetFenceStatus) },
    { "vkWaitForFences",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(WaitForFences) },
    { "vkCreateSemaphore",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CreateSemaphore) },
    { "vkDestroySemaphore",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(DestroySemaphore) },
    { "vkCreateEvent",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CreateEvent) },
    { "vkDestroyEvent",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(DestroyEvent) },
    { "vkGetEventStatus",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetEventStatus) },
    { "vkSetEvent",                                                                                          reinterpret_cast<PFN_vkVoidFunction>(SetEvent) },
    { "vkResetEvent",                                                                                        reinterpret_cast<PFN_vkVoidFunction>(ResetEvent) },
    { "vkCreateQueryPool",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CreateQueryPool) },
    { "vkDestroyQueryPool",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(DestroyQueryPool) },
    { "vkGetQueryPoolResults",                                                                               reinterpret_cast<PFN_vkVoidFunction>(GetQueryPoolResults) },
    { "vkCreateBuffer",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateBuffer) },
    { "vkDestroyBuffer",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(DestroyBuffer) },
    { "vkCreateBufferView",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(CreateBufferView) },
    { "vkDestroyBufferView",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(DestroyBufferView) },
    { "vkCreateImage",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CreateImage) },
    { "vkDestroyImage",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(DestroyImage) },
    { "vkGetImageSubresourceLayout",                                                                         reinterpret_cast<PFN_vkVoidFunction>(GetImageSubresourceLayout) },
    { "vkCreateImageView",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CreateImageView) },
    { "vkDestroyImageView",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(DestroyImageView) },
    { "vkCreateShaderModule",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CreateShaderModule) },
    { "vkDestroyShaderModule",                                                                               reinterpret_cast<PFN_vkVoidFunction>(DestroyShaderModule) },
    { "vkCreatePipelineCache",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CreatePipelineCache) },
    { "vkDestroyPipelineCache",                                                                              reinterpret_cast<PFN_vkVoidFunction>(DestroyPipelineCache) },
    { "vkGetPipelineCacheData",                                                                              reinterpret_cast<PFN_vkVoidFunction>(GetPipelineCacheData) },
    { "vkMergePipelineCaches",                                                                               reinterpret_cast<PFN_vkVoidFunction>(MergePipelineCaches) },
    { "vkCreateGraphicsPipelines",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CreateGraphicsPipelines) },
    { "vkCreateComputePipelines",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CreateComputePipelines) },
    { "vkDestroyPipeline",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(DestroyPipeline) },
    { "vkCreatePipelineLayout",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreatePipelineLayout) },
    { "vkDestroyPipelineLayout",                                                                             reinterpret_cast<PFN_vkVoidFunction>(DestroyPipelineLayout) },
    { "vkCreateSampler",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CreateSampler) },
    { "vkDestroySampler",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(DestroySampler) },
    { "vkCreateDescriptorSetLayout",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CreateDescriptorSetLayout) },
    { "vkDestroyDescriptorSetLayout",                                                                        reinterpret_cast<PFN_vkVoidFunction>(DestroyDescriptorSetLayout) },
    { "vkCreateDescriptorPool",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreateDescriptorPool) },
    { "vkDestroyDescriptorPool",                                                                             reinterpret_cast<PFN_vkVoidFunction>(DestroyDescriptorPool) },
    { "vkResetDescriptorPool",                                                                               reinterpret_cast<PFN_vkVoidFunction>(ResetDescriptorPool) },
    { "vkAllocateDescriptorSets",                                                                            reinterpret_cast<PFN_vkVoidFunction>(AllocateDescriptorSets) },
    { "vkFreeDescriptorSets",                                                                                reinterpret_cast<PFN_vkVoidFunction>(FreeDescriptorSets) },
    { "vkUpdateDescriptorSets",                                                                              reinterpret_cast<PFN_vkVoidFunction>(UpdateDescriptorSets) },
    { "vkCreateFramebuffer",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CreateFramebuffer) },
    { "vkDestroyFramebuffer",                                                                                reinterpret_cast<PFN_vkVoidFunction>(DestroyFramebuffer) },
    { "vkCreateRenderPass",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(CreateRenderPass) },
    { "vkDestroyRenderPass",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(DestroyRenderPass) },
    { "vkGetRenderAreaGranularity",                                                                          reinterpret_cast<PFN_vkVoidFunction>(GetRenderAreaGranularity) },
    { "vkCreateCommandPool",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CreateCommandPool) },
    { "vkDestroyCommandPool",                                                                                reinterpret_cast<PFN_vkVoidFunction>(DestroyCommandPool) },
    { "vkResetCommandPool",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(ResetCommandPool) },
    { "vkAllocateCommandBuffers",                                                                            reinterpret_cast<PFN_vkVoidFunction>(AllocateCommandBuffers) },
    { "vkFreeCommandBuffers",                                                                                reinterpret_cast<PFN_vkVoidFunction>(FreeCommandBuffers) },
    { "vkBeginCommandBuffer",                                                                                reinterpret_cast<PFN_vkVoidFunction>(BeginCommandBuffer) },
    { "vkEndCommandBuffer",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(EndCommandBuffer) },
    { "vkResetCommandBuffer",                                                                                reinterpret_cast<PFN_vkVoidFunction>(ResetCommandBuffer) },
    { "vkCmdBindPipeline",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdBindPipeline) },
    { "vkCmdSetViewport",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(CmdSetViewport) },
    { "vkCmdSetScissor",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdSetScissor) },
    { "vkCmdSetLineWidth",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdSetLineWidth) },
    { "vkCmdSetDepthBias",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdSetDepthBias) },
    { "vkCmdSetBlendConstants",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdSetBlendConstants) },
    { "vkCmdSetDepthBounds",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CmdSetDepthBounds) },
    { "vkCmdSetStencilCompareMask",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CmdSetStencilCompareMask) },
    { "vkCmdSetStencilWriteMask",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CmdSetStencilWriteMask) },
    { "vkCmdSetStencilReference",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CmdSetStencilReference) },
    { "vkCmdBindDescriptorSets",                                                                             reinterpret_cast<PFN_vkVoidFunction>(CmdBindDescriptorSets) },
    { "vkCmdBindIndexBuffer",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdBindIndexBuffer) },
    { "vkCmdBindVertexBuffers",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdBindVertexBuffers) },
    { "vkCmdDraw",                                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdDraw) },
    { "vkCmdDrawIndexed",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndexed) },
    { "vkCmdDrawIndirect",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndirect) },
    { "vkCmdDrawIndexedIndirect",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndexedIndirect) },
    { "vkCmdDispatch",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CmdDispatch) },
    { "vkCmdDispatchIndirect",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CmdDispatchIndirect) },
    { "vkCmdCopyBuffer",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdCopyBuffer) },
    { "vkCmdCopyImage",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(CmdCopyImage) },
    { "vkCmdBlitImage",                                                                                      reinterpret_cast<PFN_vkVoidFunction>(CmdBlitImage) },
    { "vkCmdCopyBufferToImage",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdCopyBufferToImage) },
    { "vkCmdCopyImageToBuffer",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdCopyImageToBuffer) },
    { "vkCmdUpdateBuffer",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdUpdateBuffer) },
    { "vkCmdFillBuffer",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdFillBuffer) },
    { "vkCmdClearColorImage",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdClearColorImage) },
    { "vkCmdClearDepthStencilImage",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CmdClearDepthStencilImage) },
    { "vkCmdClearAttachments",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CmdClearAttachments) },
    { "vkCmdResolveImage",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdResolveImage) },
    { "vkCmdSetEvent",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CmdSetEvent) },
    { "vkCmdResetEvent",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdResetEvent) },
    { "vkCmdWaitEvents",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdWaitEvents) },
    { "vkCmdPipelineBarrier",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdPipelineBarrier) },
    { "vkCmdBeginQuery",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdBeginQuery) },
    { "vkCmdEndQuery",                                                                                       reinterpret_cast<PFN_vkVoidFunction>(CmdEndQuery) },
    { "vkCmdResetQueryPool",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CmdResetQueryPool) },
    { "vkCmdWriteTimestamp",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CmdWriteTimestamp) },
    { "vkCmdCopyQueryPoolResults",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdCopyQueryPoolResults) },
    { "vkCmdPushConstants",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(CmdPushConstants) },
    { "vkCmdBeginRenderPass",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdBeginRenderPass) },
    { "vkCmdNextSubpass",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(CmdNextSubpass) },
    { "vkCmdEndRenderPass",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(CmdEndRenderPass) },
    { "vkCmdExecuteCommands",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdExecuteCommands) },
    { "vkBindBufferMemory2",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(BindBufferMemory2) },
    { "vkBindImageMemory2",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(BindImageMemory2) },
    { "vkGetDeviceGroupPeerMemoryFeatures",                                                                  reinterpret_cast<PFN_vkVoidFunction>(GetDeviceGroupPeerMemoryFeatures) },
    { "vkCmdSetDeviceMask",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(CmdSetDeviceMask) },
    { "vkCmdDispatchBase",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdDispatchBase) },
    { "vkEnumeratePhysicalDeviceGroups",                                                                     reinterpret_cast<PFN_vkVoidFunction>(EnumeratePhysicalDeviceGroups) },
    { "vkGetImageMemoryRequirements2",                                                                       reinterpret_cast<PFN_vkVoidFunction>(GetImageMemoryRequirements2) },
    { "vkGetBufferMemoryRequirements2",                                                                      reinterpret_cast<PFN_vkVoidFunction>(GetBufferMemoryRequirements2) },
    { "vkGetImageSparseMemoryRequirements2",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetImageSparseMemoryRequirements2) },
    { "vkGetPhysicalDeviceFeatures2",                                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFeatures2) },
    { "vkGetPhysicalDeviceProperties2",                                                                      reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceProperties2) },
    { "vkGetPhysicalDeviceFormatProperties2",                                                                reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFormatProperties2) },
    { "vkGetPhysicalDeviceImageFormatProperties2",                                                           reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceImageFormatProperties2) },
    { "vkGetPhysicalDeviceQueueFamilyProperties2",                                                           reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceQueueFamilyProperties2) },
    { "vkGetPhysicalDeviceMemoryProperties2",                                                                reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceMemoryProperties2) },
    { "vkGetPhysicalDeviceSparseImageFormatProperties2",                                                     reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSparseImageFormatProperties2) },
    { "vkTrimCommandPool",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(TrimCommandPool) },
    { "vkGetDeviceQueue2",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetDeviceQueue2) },
    { "vkCreateSamplerYcbcrConversion",                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateSamplerYcbcrConversion) },
    { "vkDestroySamplerYcbcrConversion",                                                                     reinterpret_cast<PFN_vkVoidFunction>(DestroySamplerYcbcrConversion) },
    { "vkCreateDescriptorUpdateTemplate",                                                                    reinterpret_cast<PFN_vkVoidFunction>(CreateDescriptorUpdateTemplate) },
    { "vkDestroyDescriptorUpdateTemplate",                                                                   reinterpret_cast<PFN_vkVoidFunction>(DestroyDescriptorUpdateTemplate) },
    { "vkUpdateDescriptorSetWithTemplate",                                                                   reinterpret_cast<PFN_vkVoidFunction>(UpdateDescriptorSetWithTemplate) },
    { "vkGetPhysicalDeviceExternalBufferProperties",                                                         reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalBufferProperties) },
    { "vkGetPhysicalDeviceExternalFenceProperties",                                                          reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalFenceProperties) },
    { "vkGetPhysicalDeviceExternalSemaphoreProperties",                                                      reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalSemaphoreProperties) },
    { "vkGetDescriptorSetLayoutSupport",                                                                     reinterpret_cast<PFN_vkVoidFunction>(GetDescriptorSetLayoutSupport) },
    { "vkDestroySurfaceKHR",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(DestroySurfaceKHR) },
    { "vkGetPhysicalDeviceSurfaceSupportKHR",                                                                reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceSupportKHR) },
    { "vkGetPhysicalDeviceSurfaceCapabilitiesKHR",                                                           reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceCapabilitiesKHR) },
    { "vkGetPhysicalDeviceSurfaceFormatsKHR",                                                                reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceFormatsKHR) },
    { "vkGetPhysicalDeviceSurfacePresentModesKHR",                                                           reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfacePresentModesKHR) },
    { "vkCreateSwapchainKHR",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CreateSwapchainKHR) },
    { "vkDestroySwapchainKHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(DestroySwapchainKHR) },
    { "vkGetSwapchainImagesKHR",                                                                             reinterpret_cast<PFN_vkVoidFunction>(GetSwapchainImagesKHR) },
    { "vkAcquireNextImageKHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(AcquireNextImageKHR) },
    { "vkQueuePresentKHR",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(QueuePresentKHR) },
    { "vkGetDeviceGroupPresentCapabilitiesKHR",                                                              reinterpret_cast<PFN_vkVoidFunction>(GetDeviceGroupPresentCapabilitiesKHR) },
    { "vkGetDeviceGroupSurfacePresentModesKHR",                                                              reinterpret_cast<PFN_vkVoidFunction>(GetDeviceGroupSurfacePresentModesKHR) },
    { "vkGetPhysicalDevicePresentRectanglesKHR",                                                             reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDevicePresentRectanglesKHR) },
    { "vkAcquireNextImage2KHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(AcquireNextImage2KHR) },
    { "vkGetPhysicalDeviceDisplayPropertiesKHR",                                                             reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceDisplayPropertiesKHR) },
    { "vkGetPhysicalDeviceDisplayPlanePropertiesKHR",                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceDisplayPlanePropertiesKHR) },
    { "vkGetDisplayPlaneSupportedDisplaysKHR",                                                               reinterpret_cast<PFN_vkVoidFunction>(GetDisplayPlaneSupportedDisplaysKHR) },
    { "vkGetDisplayModePropertiesKHR",                                                                       reinterpret_cast<PFN_vkVoidFunction>(GetDisplayModePropertiesKHR) },
    { "vkCreateDisplayModeKHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreateDisplayModeKHR) },
    { "vkGetDisplayPlaneCapabilitiesKHR",                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetDisplayPlaneCapabilitiesKHR) },
    { "vkCreateDisplayPlaneSurfaceKHR",                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateDisplayPlaneSurfaceKHR) },
    { "vkCreateSharedSwapchainsKHR",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CreateSharedSwapchainsKHR) },
    { "vkCreateXlibSurfaceKHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreateXlibSurfaceKHR) },
    { "vkGetPhysicalDeviceXlibPresentationSupportKHR",                                                       reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceXlibPresentationSupportKHR) },
    { "vkCreateXcbSurfaceKHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CreateXcbSurfaceKHR) },
    { "vkGetPhysicalDeviceXcbPresentationSupportKHR",                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceXcbPresentationSupportKHR) },
    { "vkCreateWaylandSurfaceKHR",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CreateWaylandSurfaceKHR) },
    { "vkGetPhysicalDeviceWaylandPresentationSupportKHR",                                                    reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceWaylandPresentationSupportKHR) },
    { "vkCreateMirSurfaceKHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CreateMirSurfaceKHR) },
    { "vkGetPhysicalDeviceMirPresentationSupportKHR",                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceMirPresentationSupportKHR) },
    { "vkCreateAndroidSurfaceKHR",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CreateAndroidSurfaceKHR) },
    { "vkCreateWin32SurfaceKHR",                                                                             reinterpret_cast<PFN_vkVoidFunction>(CreateWin32SurfaceKHR) },
    { "vkGetPhysicalDeviceWin32PresentationSupportKHR",                                                      reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceWin32PresentationSupportKHR) },
    { "vkGetPhysicalDeviceFeatures2KHR",                                                                     reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFeatures2KHR) },
    { "vkGetPhysicalDeviceProperties2KHR",                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceProperties2KHR) },
    { "vkGetPhysicalDeviceFormatProperties2KHR",                                                             reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceFormatProperties2KHR) },
    { "vkGetPhysicalDeviceImageFormatProperties2KHR",                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceImageFormatProperties2KHR) },
    { "vkGetPhysicalDeviceQueueFamilyProperties2KHR",                                                        reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceQueueFamilyProperties2KHR) },
    { "vkGetPhysicalDeviceMemoryProperties2KHR",                                                             reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceMemoryProperties2KHR) },
    { "vkGetPhysicalDeviceSparseImageFormatProperties2KHR",                                                  reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSparseImageFormatProperties2KHR) },
    { "vkGetDeviceGroupPeerMemoryFeaturesKHR",                                                               reinterpret_cast<PFN_vkVoidFunction>(GetDeviceGroupPeerMemoryFeaturesKHR) },
    { "vkCmdSetDeviceMaskKHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CmdSetDeviceMaskKHR) },
    { "vkCmdDispatchBaseKHR",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdDispatchBaseKHR) },
    { "vkTrimCommandPoolKHR",                                                                                reinterpret_cast<PFN_vkVoidFunction>(TrimCommandPoolKHR) },
    { "vkEnumeratePhysicalDeviceGroupsKHR",                                                                  reinterpret_cast<PFN_vkVoidFunction>(EnumeratePhysicalDeviceGroupsKHR) },
    { "vkGetPhysicalDeviceExternalBufferPropertiesKHR",                                                      reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalBufferPropertiesKHR) },
    { "vkGetMemoryWin32HandleKHR",                                                                           reinterpret_cast<PFN_vkVoidFunction>(GetMemoryWin32HandleKHR) },
    { "vkGetMemoryWin32HandlePropertiesKHR",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetMemoryWin32HandlePropertiesKHR) },
    { "vkGetMemoryFdKHR",                                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetMemoryFdKHR) },
    { "vkGetMemoryFdPropertiesKHR",                                                                          reinterpret_cast<PFN_vkVoidFunction>(GetMemoryFdPropertiesKHR) },
    { "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR",                                                   reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalSemaphorePropertiesKHR) },
    { "vkImportSemaphoreWin32HandleKHR",                                                                     reinterpret_cast<PFN_vkVoidFunction>(ImportSemaphoreWin32HandleKHR) },
    { "vkGetSemaphoreWin32HandleKHR",                                                                        reinterpret_cast<PFN_vkVoidFunction>(GetSemaphoreWin32HandleKHR) },
    { "vkImportSemaphoreFdKHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(ImportSemaphoreFdKHR) },
    { "vkGetSemaphoreFdKHR",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetSemaphoreFdKHR) },
    { "vkCmdPushDescriptorSetKHR",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdPushDescriptorSetKHR) },
    { "vkCmdPushDescriptorSetWithTemplateKHR",                                                               reinterpret_cast<PFN_vkVoidFunction>(CmdPushDescriptorSetWithTemplateKHR) },
    { "vkCreateDescriptorUpdateTemplateKHR",                                                                 reinterpret_cast<PFN_vkVoidFunction>(CreateDescriptorUpdateTemplateKHR) },
    { "vkDestroyDescriptorUpdateTemplateKHR",                                                                reinterpret_cast<PFN_vkVoidFunction>(DestroyDescriptorUpdateTemplateKHR) },
    { "vkUpdateDescriptorSetWithTemplateKHR",                                                                reinterpret_cast<PFN_vkVoidFunction>(UpdateDescriptorSetWithTemplateKHR) },
    { "vkCreateRenderPass2KHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreateRenderPass2KHR) },
    { "vkCmdBeginRenderPass2KHR",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CmdBeginRenderPass2KHR) },
    { "vkCmdNextSubpass2KHR",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdNextSubpass2KHR) },
    { "vkCmdEndRenderPass2KHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdEndRenderPass2KHR) },
    { "vkGetSwapchainStatusKHR",                                                                             reinterpret_cast<PFN_vkVoidFunction>(GetSwapchainStatusKHR) },
    { "vkGetPhysicalDeviceExternalFencePropertiesKHR",                                                       reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalFencePropertiesKHR) },
    { "vkImportFenceWin32HandleKHR",                                                                         reinterpret_cast<PFN_vkVoidFunction>(ImportFenceWin32HandleKHR) },
    { "vkGetFenceWin32HandleKHR",                                                                            reinterpret_cast<PFN_vkVoidFunction>(GetFenceWin32HandleKHR) },
    { "vkImportFenceFdKHR",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(ImportFenceFdKHR) },
    { "vkGetFenceFdKHR",                                                                                     reinterpret_cast<PFN_vkVoidFunction>(GetFenceFdKHR) },
    { "vkGetPhysicalDeviceSurfaceCapabilities2KHR",                                                          reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceCapabilities2KHR) },
    { "vkGetPhysicalDeviceSurfaceFormats2KHR",                                                               reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceFormats2KHR) },
    { "vkGetPhysicalDeviceDisplayProperties2KHR",                                                            reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceDisplayProperties2KHR) },
    { "vkGetPhysicalDeviceDisplayPlaneProperties2KHR",                                                       reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceDisplayPlaneProperties2KHR) },
    { "vkGetDisplayModeProperties2KHR",                                                                      reinterpret_cast<PFN_vkVoidFunction>(GetDisplayModeProperties2KHR) },
    { "vkGetDisplayPlaneCapabilities2KHR",                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetDisplayPlaneCapabilities2KHR) },
    { "vkGetImageMemoryRequirements2KHR",                                                                    reinterpret_cast<PFN_vkVoidFunction>(GetImageMemoryRequirements2KHR) },
    { "vkGetBufferMemoryRequirements2KHR",                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetBufferMemoryRequirements2KHR) },
    { "vkGetImageSparseMemoryRequirements2KHR",                                                              reinterpret_cast<PFN_vkVoidFunction>(GetImageSparseMemoryRequirements2KHR) },
    { "vkCreateSamplerYcbcrConversionKHR",                                                                   reinterpret_cast<PFN_vkVoidFunction>(CreateSamplerYcbcrConversionKHR) },
    { "vkDestroySamplerYcbcrConversionKHR",                                                                  reinterpret_cast<PFN_vkVoidFunction>(DestroySamplerYcbcrConversionKHR) },
    { "vkBindBufferMemory2KHR",                                                                              reinterpret_cast<PFN_vkVoidFunction>(BindBufferMemory2KHR) },
    { "vkBindImageMemory2KHR",                                                                               reinterpret_cast<PFN_vkVoidFunction>(BindImageMemory2KHR) },
    { "vkGetDescriptorSetLayoutSupportKHR",                                                                  reinterpret_cast<PFN_vkVoidFunction>(GetDescriptorSetLayoutSupportKHR) },
    { "vkCmdDrawIndirectCountKHR",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndirectCountKHR) },
    { "vkCmdDrawIndexedIndirectCountKHR",                                                                    reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndexedIndirectCountKHR) },
    { "vkCreateDebugReportCallbackEXT",                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateDebugReportCallbackEXT) },
    { "vkDestroyDebugReportCallbackEXT",                                                                     reinterpret_cast<PFN_vkVoidFunction>(DestroyDebugReportCallbackEXT) },
    { "vkDebugReportMessageEXT",                                                                             reinterpret_cast<PFN_vkVoidFunction>(DebugReportMessageEXT) },
    { "vkDebugMarkerSetObjectTagEXT",                                                                        reinterpret_cast<PFN_vkVoidFunction>(DebugMarkerSetObjectTagEXT) },
    { "vkDebugMarkerSetObjectNameEXT",                                                                       reinterpret_cast<PFN_vkVoidFunction>(DebugMarkerSetObjectNameEXT) },
    { "vkCmdDebugMarkerBeginEXT",                                                                            reinterpret_cast<PFN_vkVoidFunction>(CmdDebugMarkerBeginEXT) },
    { "vkCmdDebugMarkerEndEXT",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CmdDebugMarkerEndEXT) },
    { "vkCmdDebugMarkerInsertEXT",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdDebugMarkerInsertEXT) },
    { "vkCmdDrawIndirectCountAMD",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndirectCountAMD) },
    { "vkCmdDrawIndexedIndirectCountAMD",                                                                    reinterpret_cast<PFN_vkVoidFunction>(CmdDrawIndexedIndirectCountAMD) },
    { "vkGetShaderInfoAMD",                                                                                  reinterpret_cast<PFN_vkVoidFunction>(GetShaderInfoAMD) },
    { "vkGetPhysicalDeviceExternalImageFormatPropertiesNV",                                                  reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceExternalImageFormatPropertiesNV) },
    { "vkGetMemoryWin32HandleNV",                                                                            reinterpret_cast<PFN_vkVoidFunction>(GetMemoryWin32HandleNV) },
    { "vkCreateViSurfaceNN",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(CreateViSurfaceNN) },
    { "vkCmdBeginConditionalRenderingEXT",                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdBeginConditionalRenderingEXT) },
    { "vkCmdEndConditionalRenderingEXT",                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdEndConditionalRenderingEXT) },
    { "vkCmdProcessCommandsNVX",                                                                             reinterpret_cast<PFN_vkVoidFunction>(CmdProcessCommandsNVX) },
    { "vkCmdReserveSpaceForCommandsNVX",                                                                     reinterpret_cast<PFN_vkVoidFunction>(CmdReserveSpaceForCommandsNVX) },
    { "vkCreateIndirectCommandsLayoutNVX",                                                                   reinterpret_cast<PFN_vkVoidFunction>(CreateIndirectCommandsLayoutNVX) },
    { "vkDestroyIndirectCommandsLayoutNVX",                                                                  reinterpret_cast<PFN_vkVoidFunction>(DestroyIndirectCommandsLayoutNVX) },
    { "vkCreateObjectTableNVX",                                                                              reinterpret_cast<PFN_vkVoidFunction>(CreateObjectTableNVX) },
    { "vkDestroyObjectTableNVX",                                                                             reinterpret_cast<PFN_vkVoidFunction>(DestroyObjectTableNVX) },
    { "vkRegisterObjectsNVX",                                                                                reinterpret_cast<PFN_vkVoidFunction>(RegisterObjectsNVX) },
    { "vkUnregisterObjectsNVX",                                                                              reinterpret_cast<PFN_vkVoidFunction>(UnregisterObjectsNVX) },
    { "vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX",                                                   reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceGeneratedCommandsPropertiesNVX) },
    { "vkCmdSetViewportWScalingNV",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CmdSetViewportWScalingNV) },
    { "vkReleaseDisplayEXT",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(ReleaseDisplayEXT) },
    { "vkAcquireXlibDisplayEXT",                                                                             reinterpret_cast<PFN_vkVoidFunction>(AcquireXlibDisplayEXT) },
    { "vkGetRandROutputDisplayEXT",                                                                          reinterpret_cast<PFN_vkVoidFunction>(GetRandROutputDisplayEXT) },
    { "vkGetPhysicalDeviceSurfaceCapabilities2EXT",                                                          reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceSurfaceCapabilities2EXT) },
    { "vkDisplayPowerControlEXT",                                                                            reinterpret_cast<PFN_vkVoidFunction>(DisplayPowerControlEXT) },
    { "vkRegisterDeviceEventEXT",                                                                            reinterpret_cast<PFN_vkVoidFunction>(RegisterDeviceEventEXT) },
    { "vkRegisterDisplayEventEXT",                                                                           reinterpret_cast<PFN_vkVoidFunction>(RegisterDisplayEventEXT) },
    { "vkGetSwapchainCounterEXT",                                                                            reinterpret_cast<PFN_vkVoidFunction>(GetSwapchainCounterEXT) },
    { "vkGetRefreshCycleDurationGOOGLE",                                                                     reinterpret_cast<PFN_vkVoidFunction>(GetRefreshCycleDurationGOOGLE) },
    { "vkGetPastPresentationTimingGOOGLE",                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetPastPresentationTimingGOOGLE) },
    { "vkCmdSetDiscardRectangleEXT",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CmdSetDiscardRectangleEXT) },
    { "vkSetHdrMetadataEXT",                                                                                 reinterpret_cast<PFN_vkVoidFunction>(SetHdrMetadataEXT) },
    { "vkCreateIOSSurfaceMVK",                                                                               reinterpret_cast<PFN_vkVoidFunction>(CreateIOSSurfaceMVK) },
    { "vkCreateMacOSSurfaceMVK",                                                                             reinterpret_cast<PFN_vkVoidFunction>(CreateMacOSSurfaceMVK) },
    { "vkSetDebugUtilsObjectNameEXT",                                                                        reinterpret_cast<PFN_vkVoidFunction>(SetDebugUtilsObjectNameEXT) },
    { "vkSetDebugUtilsObjectTagEXT",                                                                         reinterpret_cast<PFN_vkVoidFunction>(SetDebugUtilsObjectTagEXT) },
    { "vkQueueBeginDebugUtilsLabelEXT",                                                                      reinterpret_cast<PFN_vkVoidFunction>(QueueBeginDebugUtilsLabelEXT) },
    { "vkQueueEndDebugUtilsLabelEXT",                                                                        reinterpret_cast<PFN_vkVoidFunction>(QueueEndDebugUtilsLabelEXT) },
    { "vkQueueInsertDebugUtilsLabelEXT",                                                                     reinterpret_cast<PFN_vkVoidFunction>(QueueInsertDebugUtilsLabelEXT) },
    { "vkCmdBeginDebugUtilsLabelEXT",                                                                        reinterpret_cast<PFN_vkVoidFunction>(CmdBeginDebugUtilsLabelEXT) },
    { "vkCmdEndDebugUtilsLabelEXT",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CmdEndDebugUtilsLabelEXT) },
    { "vkCmdInsertDebugUtilsLabelEXT",                                                                       reinterpret_cast<PFN_vkVoidFunction>(CmdInsertDebugUtilsLabelEXT) },
    { "vkCreateDebugUtilsMessengerEXT",                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateDebugUtilsMessengerEXT) },
    { "vkDestroyDebugUtilsMessengerEXT",                                                                     reinterpret_cast<PFN_vkVoidFunction>(DestroyDebugUtilsMessengerEXT) },
    { "vkSubmitDebugUtilsMessageEXT",                                                                        reinterpret_cast<PFN_vkVoidFunction>(SubmitDebugUtilsMessageEXT) },
    { "vkGetAndroidHardwareBufferPropertiesANDROID",                                                         reinterpret_cast<PFN_vkVoidFunction>(GetAndroidHardwareBufferPropertiesANDROID) },
    { "vkGetMemoryAndroidHardwareBufferANDROID",                                                             reinterpret_cast<PFN_vkVoidFunction>(GetMemoryAndroidHardwareBufferANDROID) },
    { "vkCmdSetSampleLocationsEXT",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CmdSetSampleLocationsEXT) },
    { "vkGetPhysicalDeviceMultisamplePropertiesEXT",                                                         reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceMultisamplePropertiesEXT) },
    { "vkCreateValidationCacheEXT",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CreateValidationCacheEXT) },
    { "vkDestroyValidationCacheEXT",                                                                         reinterpret_cast<PFN_vkVoidFunction>(DestroyValidationCacheEXT) },
    { "vkMergeValidationCachesEXT",                                                                          reinterpret_cast<PFN_vkVoidFunction>(MergeValidationCachesEXT) },
    { "vkGetValidationCacheDataEXT",                                                                         reinterpret_cast<PFN_vkVoidFunction>(GetValidationCacheDataEXT) },
    { "vkCmdBindShadingRateImageNV",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CmdBindShadingRateImageNV) },
    { "vkCmdSetViewportShadingRatePaletteNV",                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdSetViewportShadingRatePaletteNV) },
    { "vkCmdSetCoarseSampleOrderNV",                                                                         reinterpret_cast<PFN_vkVoidFunction>(CmdSetCoarseSampleOrderNV) },
    { "vkCreateAccelerationStructureNVX",                                                                    reinterpret_cast<PFN_vkVoidFunction>(CreateAccelerationStructureNVX) },
    { "vkDestroyAccelerationStructureNVX",                                                                   reinterpret_cast<PFN_vkVoidFunction>(DestroyAccelerationStructureNVX) },
    { "vkGetAccelerationStructureMemoryRequirementsNVX",                                                     reinterpret_cast<PFN_vkVoidFunction>(GetAccelerationStructureMemoryRequirementsNVX) },
    { "vkGetAccelerationStructureScratchMemoryRequirementsNVX",                                              reinterpret_cast<PFN_vkVoidFunction>(GetAccelerationStructureScratchMemoryRequirementsNVX) },
    { "vkBindAccelerationStructureMemoryNVX",                                                                reinterpret_cast<PFN_vkVoidFunction>(BindAccelerationStructureMemoryNVX) },
    { "vkCmdBuildAccelerationStructureNVX",                                                                  reinterpret_cast<PFN_vkVoidFunction>(CmdBuildAccelerationStructureNVX) },
    { "vkCmdCopyAccelerationStructureNVX",                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdCopyAccelerationStructureNVX) },
    { "vkCmdTraceRaysNVX",                                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdTraceRaysNVX) },
    { "vkCreateRaytracingPipelinesNVX",                                                                      reinterpret_cast<PFN_vkVoidFunction>(CreateRaytracingPipelinesNVX) },
    { "vkGetRaytracingShaderHandlesNVX",                                                                     reinterpret_cast<PFN_vkVoidFunction>(GetRaytracingShaderHandlesNVX) },
    { "vkGetAccelerationStructureHandleNVX",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetAccelerationStructureHandleNVX) },
    { "vkCmdWriteAccelerationStructurePropertiesNVX",                                                        reinterpret_cast<PFN_vkVoidFunction>(CmdWriteAccelerationStructurePropertiesNVX) },
    { "vkCompileDeferredNVX",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CompileDeferredNVX) },
    { "vkGetMemoryHostPointerPropertiesEXT",                                                                 reinterpret_cast<PFN_vkVoidFunction>(GetMemoryHostPointerPropertiesEXT) },
    { "vkCmdWriteBufferMarkerAMD",                                                                           reinterpret_cast<PFN_vkVoidFunction>(CmdWriteBufferMarkerAMD) },
    { "vkCmdDrawMeshTasksNV",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdDrawMeshTasksNV) },
    { "vkCmdDrawMeshTasksIndirectNV",                                                                        reinterpret_cast<PFN_vkVoidFunction>(CmdDrawMeshTasksIndirectNV) },
    { "vkCmdDrawMeshTasksIndirectCountNV",                                                                   reinterpret_cast<PFN_vkVoidFunction>(CmdDrawMeshTasksIndirectCountNV) },
    { "vkCmdSetExclusiveScissorNV",                                                                          reinterpret_cast<PFN_vkVoidFunction>(CmdSetExclusiveScissorNV) },
    { "vkCmdSetCheckpointNV",                                                                                reinterpret_cast<PFN_vkVoidFunction>(CmdSetCheckpointNV) },
    { "vkGetQueueCheckpointDataNV",                                                                          reinterpret_cast<PFN_vkVoidFunction>(GetQueueCheckpointDataNV) },
    { "vkCreateImagePipeSurfaceFUCHSIA",                                                                     reinterpret_cast<PFN_vkVoidFunction>(CreateImagePipeSurfaceFUCHSIA) },

    // Special case handling of "vk_layerGetPhysicalDeviceProcAddr"
    { "vk_layerGetPhysicalDeviceProcAddr",                                                                   reinterpret_cast<PFN_vkVoidFunction>(GetPhysicalDeviceProcAddr) },
};

GFXRECON_END_NAMESPACE(gfxrecon)

#endif
