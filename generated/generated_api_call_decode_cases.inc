/*
** Copyright (c) 2018 LunarG, Inc.
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/

/*
** This file is generated from the Khronos Vulkan XML API Registry.
**
*/


    case ApiCallId_vkCreateInstance:
        Decode_vkCreateInstance(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyInstance:
        Decode_vkDestroyInstance(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkEnumeratePhysicalDevices:
        Decode_vkEnumeratePhysicalDevices(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceFeatures:
        Decode_vkGetPhysicalDeviceFeatures(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceFormatProperties:
        Decode_vkGetPhysicalDeviceFormatProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceImageFormatProperties:
        Decode_vkGetPhysicalDeviceImageFormatProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceProperties:
        Decode_vkGetPhysicalDeviceProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceQueueFamilyProperties:
        Decode_vkGetPhysicalDeviceQueueFamilyProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceMemoryProperties:
        Decode_vkGetPhysicalDeviceMemoryProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDevice:
        Decode_vkCreateDevice(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDevice:
        Decode_vkDestroyDevice(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceQueue:
        Decode_vkGetDeviceQueue(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueSubmit:
        Decode_vkQueueSubmit(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueWaitIdle:
        Decode_vkQueueWaitIdle(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDeviceWaitIdle:
        Decode_vkDeviceWaitIdle(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkAllocateMemory:
        Decode_vkAllocateMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkFreeMemory:
        Decode_vkFreeMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkMapMemory:
        Decode_vkMapMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkUnmapMemory:
        Decode_vkUnmapMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkFlushMappedMemoryRanges:
        Decode_vkFlushMappedMemoryRanges(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkInvalidateMappedMemoryRanges:
        Decode_vkInvalidateMappedMemoryRanges(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceMemoryCommitment:
        Decode_vkGetDeviceMemoryCommitment(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkBindBufferMemory:
        Decode_vkBindBufferMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkBindImageMemory:
        Decode_vkBindImageMemory(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetBufferMemoryRequirements:
        Decode_vkGetBufferMemoryRequirements(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageMemoryRequirements:
        Decode_vkGetImageMemoryRequirements(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageSparseMemoryRequirements:
        Decode_vkGetImageSparseMemoryRequirements(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSparseImageFormatProperties:
        Decode_vkGetPhysicalDeviceSparseImageFormatProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueBindSparse:
        Decode_vkQueueBindSparse(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateFence:
        Decode_vkCreateFence(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyFence:
        Decode_vkDestroyFence(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkResetFences:
        Decode_vkResetFences(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetFenceStatus:
        Decode_vkGetFenceStatus(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkWaitForFences:
        Decode_vkWaitForFences(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateSemaphore:
        Decode_vkCreateSemaphore(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroySemaphore:
        Decode_vkDestroySemaphore(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateEvent:
        Decode_vkCreateEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyEvent:
        Decode_vkDestroyEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetEventStatus:
        Decode_vkGetEventStatus(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkSetEvent:
        Decode_vkSetEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkResetEvent:
        Decode_vkResetEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateQueryPool:
        Decode_vkCreateQueryPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyQueryPool:
        Decode_vkDestroyQueryPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetQueryPoolResults:
        Decode_vkGetQueryPoolResults(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateBuffer:
        Decode_vkCreateBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyBuffer:
        Decode_vkDestroyBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateBufferView:
        Decode_vkCreateBufferView(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyBufferView:
        Decode_vkDestroyBufferView(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateImage:
        Decode_vkCreateImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyImage:
        Decode_vkDestroyImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageSubresourceLayout:
        Decode_vkGetImageSubresourceLayout(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateImageView:
        Decode_vkCreateImageView(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyImageView:
        Decode_vkDestroyImageView(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateShaderModule:
        Decode_vkCreateShaderModule(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyShaderModule:
        Decode_vkDestroyShaderModule(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreatePipelineCache:
        Decode_vkCreatePipelineCache(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyPipelineCache:
        Decode_vkDestroyPipelineCache(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPipelineCacheData:
        Decode_vkGetPipelineCacheData(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkMergePipelineCaches:
        Decode_vkMergePipelineCaches(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateGraphicsPipelines:
        Decode_vkCreateGraphicsPipelines(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateComputePipelines:
        Decode_vkCreateComputePipelines(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyPipeline:
        Decode_vkDestroyPipeline(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreatePipelineLayout:
        Decode_vkCreatePipelineLayout(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyPipelineLayout:
        Decode_vkDestroyPipelineLayout(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateSampler:
        Decode_vkCreateSampler(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroySampler:
        Decode_vkDestroySampler(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDescriptorSetLayout:
        Decode_vkCreateDescriptorSetLayout(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDescriptorSetLayout:
        Decode_vkDestroyDescriptorSetLayout(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDescriptorPool:
        Decode_vkCreateDescriptorPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDescriptorPool:
        Decode_vkDestroyDescriptorPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkResetDescriptorPool:
        Decode_vkResetDescriptorPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkAllocateDescriptorSets:
        Decode_vkAllocateDescriptorSets(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkFreeDescriptorSets:
        Decode_vkFreeDescriptorSets(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkUpdateDescriptorSets:
        Decode_vkUpdateDescriptorSets(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateFramebuffer:
        Decode_vkCreateFramebuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyFramebuffer:
        Decode_vkDestroyFramebuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateRenderPass:
        Decode_vkCreateRenderPass(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyRenderPass:
        Decode_vkDestroyRenderPass(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetRenderAreaGranularity:
        Decode_vkGetRenderAreaGranularity(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateCommandPool:
        Decode_vkCreateCommandPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyCommandPool:
        Decode_vkDestroyCommandPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkResetCommandPool:
        Decode_vkResetCommandPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkAllocateCommandBuffers:
        Decode_vkAllocateCommandBuffers(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkFreeCommandBuffers:
        Decode_vkFreeCommandBuffers(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkBeginCommandBuffer:
        Decode_vkBeginCommandBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkEndCommandBuffer:
        Decode_vkEndCommandBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkResetCommandBuffer:
        Decode_vkResetCommandBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBindPipeline:
        Decode_vkCmdBindPipeline(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetViewport:
        Decode_vkCmdSetViewport(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetScissor:
        Decode_vkCmdSetScissor(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetLineWidth:
        Decode_vkCmdSetLineWidth(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetDepthBias:
        Decode_vkCmdSetDepthBias(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetBlendConstants:
        Decode_vkCmdSetBlendConstants(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetDepthBounds:
        Decode_vkCmdSetDepthBounds(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetStencilCompareMask:
        Decode_vkCmdSetStencilCompareMask(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetStencilWriteMask:
        Decode_vkCmdSetStencilWriteMask(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetStencilReference:
        Decode_vkCmdSetStencilReference(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBindDescriptorSets:
        Decode_vkCmdBindDescriptorSets(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBindIndexBuffer:
        Decode_vkCmdBindIndexBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBindVertexBuffers:
        Decode_vkCmdBindVertexBuffers(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDraw:
        Decode_vkCmdDraw(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDrawIndexed:
        Decode_vkCmdDrawIndexed(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDrawIndirect:
        Decode_vkCmdDrawIndirect(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDrawIndexedIndirect:
        Decode_vkCmdDrawIndexedIndirect(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDispatch:
        Decode_vkCmdDispatch(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDispatchIndirect:
        Decode_vkCmdDispatchIndirect(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdCopyBuffer:
        Decode_vkCmdCopyBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdCopyImage:
        Decode_vkCmdCopyImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBlitImage:
        Decode_vkCmdBlitImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdCopyBufferToImage:
        Decode_vkCmdCopyBufferToImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdCopyImageToBuffer:
        Decode_vkCmdCopyImageToBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdUpdateBuffer:
        Decode_vkCmdUpdateBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdFillBuffer:
        Decode_vkCmdFillBuffer(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdClearColorImage:
        Decode_vkCmdClearColorImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdClearDepthStencilImage:
        Decode_vkCmdClearDepthStencilImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdClearAttachments:
        Decode_vkCmdClearAttachments(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdResolveImage:
        Decode_vkCmdResolveImage(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetEvent:
        Decode_vkCmdSetEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdResetEvent:
        Decode_vkCmdResetEvent(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdWaitEvents:
        Decode_vkCmdWaitEvents(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdPipelineBarrier:
        Decode_vkCmdPipelineBarrier(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBeginQuery:
        Decode_vkCmdBeginQuery(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdEndQuery:
        Decode_vkCmdEndQuery(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdResetQueryPool:
        Decode_vkCmdResetQueryPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdWriteTimestamp:
        Decode_vkCmdWriteTimestamp(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdCopyQueryPoolResults:
        Decode_vkCmdCopyQueryPoolResults(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdPushConstants:
        Decode_vkCmdPushConstants(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBeginRenderPass:
        Decode_vkCmdBeginRenderPass(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdNextSubpass:
        Decode_vkCmdNextSubpass(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdEndRenderPass:
        Decode_vkCmdEndRenderPass(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdExecuteCommands:
        Decode_vkCmdExecuteCommands(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkBindBufferMemory2:
        Decode_vkBindBufferMemory2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkBindImageMemory2:
        Decode_vkBindImageMemory2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceGroupPeerMemoryFeatures:
        Decode_vkGetDeviceGroupPeerMemoryFeatures(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetDeviceMask:
        Decode_vkCmdSetDeviceMask(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDispatchBase:
        Decode_vkCmdDispatchBase(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkEnumeratePhysicalDeviceGroups:
        Decode_vkEnumeratePhysicalDeviceGroups(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageMemoryRequirements2:
        Decode_vkGetImageMemoryRequirements2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetBufferMemoryRequirements2:
        Decode_vkGetBufferMemoryRequirements2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageSparseMemoryRequirements2:
        Decode_vkGetImageSparseMemoryRequirements2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceFeatures2:
        Decode_vkGetPhysicalDeviceFeatures2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceProperties2:
        Decode_vkGetPhysicalDeviceProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceFormatProperties2:
        Decode_vkGetPhysicalDeviceFormatProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceImageFormatProperties2:
        Decode_vkGetPhysicalDeviceImageFormatProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceQueueFamilyProperties2:
        Decode_vkGetPhysicalDeviceQueueFamilyProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceMemoryProperties2:
        Decode_vkGetPhysicalDeviceMemoryProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSparseImageFormatProperties2:
        Decode_vkGetPhysicalDeviceSparseImageFormatProperties2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkTrimCommandPool:
        Decode_vkTrimCommandPool(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceQueue2:
        Decode_vkGetDeviceQueue2(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateSamplerYcbcrConversion:
        Decode_vkCreateSamplerYcbcrConversion(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroySamplerYcbcrConversion:
        Decode_vkDestroySamplerYcbcrConversion(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDescriptorUpdateTemplate:
        Decode_vkCreateDescriptorUpdateTemplate(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDescriptorUpdateTemplate:
        Decode_vkDestroyDescriptorUpdateTemplate(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkUpdateDescriptorSetWithTemplate:
        Decode_vkUpdateDescriptorSetWithTemplate(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceExternalBufferProperties:
        Decode_vkGetPhysicalDeviceExternalBufferProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceExternalFenceProperties:
        Decode_vkGetPhysicalDeviceExternalFenceProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceExternalSemaphoreProperties:
        Decode_vkGetPhysicalDeviceExternalSemaphoreProperties(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDescriptorSetLayoutSupport:
        Decode_vkGetDescriptorSetLayoutSupport(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkDestroySurfaceKHR:
        Decode_vkDestroySurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSurfaceSupportKHR:
        Decode_vkGetPhysicalDeviceSurfaceSupportKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSurfaceCapabilitiesKHR:
        Decode_vkGetPhysicalDeviceSurfaceCapabilitiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSurfaceFormatsKHR:
        Decode_vkGetPhysicalDeviceSurfaceFormatsKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSurfacePresentModesKHR:
        Decode_vkGetPhysicalDeviceSurfacePresentModesKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateSwapchainKHR:
        Decode_vkCreateSwapchainKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroySwapchainKHR:
        Decode_vkDestroySwapchainKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetSwapchainImagesKHR:
        Decode_vkGetSwapchainImagesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkAcquireNextImageKHR:
        Decode_vkAcquireNextImageKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueuePresentKHR:
        Decode_vkQueuePresentKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceGroupPresentCapabilitiesKHR:
        Decode_vkGetDeviceGroupPresentCapabilitiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDeviceGroupSurfacePresentModesKHR:
        Decode_vkGetDeviceGroupSurfacePresentModesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDevicePresentRectanglesKHR:
        Decode_vkGetPhysicalDevicePresentRectanglesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkAcquireNextImage2KHR:
        Decode_vkAcquireNextImage2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceDisplayPropertiesKHR:
        Decode_vkGetPhysicalDeviceDisplayPropertiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceDisplayPlanePropertiesKHR:
        Decode_vkGetPhysicalDeviceDisplayPlanePropertiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDisplayPlaneSupportedDisplaysKHR:
        Decode_vkGetDisplayPlaneSupportedDisplaysKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDisplayModePropertiesKHR:
        Decode_vkGetDisplayModePropertiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDisplayModeKHR:
        Decode_vkCreateDisplayModeKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDisplayPlaneCapabilitiesKHR:
        Decode_vkGetDisplayPlaneCapabilitiesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDisplayPlaneSurfaceKHR:
        Decode_vkCreateDisplayPlaneSurfaceKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateSharedSwapchainsKHR:
        Decode_vkCreateSharedSwapchainsKHR(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_XLIB_KHR
    case ApiCallId_vkCreateXlibSurfaceKHR:
        Decode_vkCreateXlibSurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceXlibPresentationSupportKHR:
        Decode_vkGetPhysicalDeviceXlibPresentationSupportKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_XLIB_KHR */

#ifdef VK_USE_PLATFORM_XCB_KHR
    case ApiCallId_vkCreateXcbSurfaceKHR:
        Decode_vkCreateXcbSurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceXcbPresentationSupportKHR:
        Decode_vkGetPhysicalDeviceXcbPresentationSupportKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_XCB_KHR */

#ifdef VK_USE_PLATFORM_WAYLAND_KHR
    case ApiCallId_vkCreateWaylandSurfaceKHR:
        Decode_vkCreateWaylandSurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceWaylandPresentationSupportKHR:
        Decode_vkGetPhysicalDeviceWaylandPresentationSupportKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WAYLAND_KHR */

#ifdef VK_USE_PLATFORM_MIR_KHR
    case ApiCallId_vkCreateMirSurfaceKHR:
        Decode_vkCreateMirSurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceMirPresentationSupportKHR:
        Decode_vkGetPhysicalDeviceMirPresentationSupportKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_MIR_KHR */

#ifdef VK_USE_PLATFORM_ANDROID_KHR
    case ApiCallId_vkCreateAndroidSurfaceKHR:
        Decode_vkCreateAndroidSurfaceKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_ANDROID_KHR */

#ifdef VK_USE_PLATFORM_WIN32_KHR
    case ApiCallId_vkCreateWin32SurfaceKHR:
        Decode_vkCreateWin32SurfaceKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceWin32PresentationSupportKHR:
        Decode_vkGetPhysicalDeviceWin32PresentationSupportKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WIN32_KHR */

    case ApiCallId_vkGetPhysicalDeviceFeatures2KHR:
        Decode_vkGetPhysicalDeviceFeatures2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceProperties2KHR:
        Decode_vkGetPhysicalDeviceProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceFormatProperties2KHR:
        Decode_vkGetPhysicalDeviceFormatProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceImageFormatProperties2KHR:
        Decode_vkGetPhysicalDeviceImageFormatProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceQueueFamilyProperties2KHR:
        Decode_vkGetPhysicalDeviceQueueFamilyProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceMemoryProperties2KHR:
        Decode_vkGetPhysicalDeviceMemoryProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSparseImageFormatProperties2KHR:
        Decode_vkGetPhysicalDeviceSparseImageFormatProperties2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetDeviceGroupPeerMemoryFeaturesKHR:
        Decode_vkGetDeviceGroupPeerMemoryFeaturesKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdSetDeviceMaskKHR:
        Decode_vkCmdSetDeviceMaskKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDispatchBaseKHR:
        Decode_vkCmdDispatchBaseKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkTrimCommandPoolKHR:
        Decode_vkTrimCommandPoolKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkEnumeratePhysicalDeviceGroupsKHR:
        Decode_vkEnumeratePhysicalDeviceGroupsKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceExternalBufferPropertiesKHR:
        Decode_vkGetPhysicalDeviceExternalBufferPropertiesKHR(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_WIN32_KHR
    case ApiCallId_vkGetMemoryWin32HandleKHR:
        Decode_vkGetMemoryWin32HandleKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetMemoryWin32HandlePropertiesKHR:
        Decode_vkGetMemoryWin32HandlePropertiesKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WIN32_KHR */

    case ApiCallId_vkGetMemoryFdKHR:
        Decode_vkGetMemoryFdKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetMemoryFdPropertiesKHR:
        Decode_vkGetMemoryFdPropertiesKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR:
        Decode_vkGetPhysicalDeviceExternalSemaphorePropertiesKHR(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_WIN32_KHR
    case ApiCallId_vkImportSemaphoreWin32HandleKHR:
        Decode_vkImportSemaphoreWin32HandleKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetSemaphoreWin32HandleKHR:
        Decode_vkGetSemaphoreWin32HandleKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WIN32_KHR */

    case ApiCallId_vkImportSemaphoreFdKHR:
        Decode_vkImportSemaphoreFdKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetSemaphoreFdKHR:
        Decode_vkGetSemaphoreFdKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdPushDescriptorSetKHR:
        Decode_vkCmdPushDescriptorSetKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdPushDescriptorSetWithTemplateKHR:
        Decode_vkCmdPushDescriptorSetWithTemplateKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateDescriptorUpdateTemplateKHR:
        Decode_vkCreateDescriptorUpdateTemplateKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDescriptorUpdateTemplateKHR:
        Decode_vkDestroyDescriptorUpdateTemplateKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkUpdateDescriptorSetWithTemplateKHR:
        Decode_vkUpdateDescriptorSetWithTemplateKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateRenderPass2KHR:
        Decode_vkCreateRenderPass2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBeginRenderPass2KHR:
        Decode_vkCmdBeginRenderPass2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdNextSubpass2KHR:
        Decode_vkCmdNextSubpass2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdEndRenderPass2KHR:
        Decode_vkCmdEndRenderPass2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetSwapchainStatusKHR:
        Decode_vkGetSwapchainStatusKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceExternalFencePropertiesKHR:
        Decode_vkGetPhysicalDeviceExternalFencePropertiesKHR(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_WIN32_KHR
    case ApiCallId_vkImportFenceWin32HandleKHR:
        Decode_vkImportFenceWin32HandleKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetFenceWin32HandleKHR:
        Decode_vkGetFenceWin32HandleKHR(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WIN32_KHR */

    case ApiCallId_vkImportFenceFdKHR:
        Decode_vkImportFenceFdKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetFenceFdKHR:
        Decode_vkGetFenceFdKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceSurfaceCapabilities2KHR:
        Decode_vkGetPhysicalDeviceSurfaceCapabilities2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceSurfaceFormats2KHR:
        Decode_vkGetPhysicalDeviceSurfaceFormats2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceDisplayProperties2KHR:
        Decode_vkGetPhysicalDeviceDisplayProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceDisplayPlaneProperties2KHR:
        Decode_vkGetPhysicalDeviceDisplayPlaneProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDisplayModeProperties2KHR:
        Decode_vkGetDisplayModeProperties2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetDisplayPlaneCapabilities2KHR:
        Decode_vkGetDisplayPlaneCapabilities2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetImageMemoryRequirements2KHR:
        Decode_vkGetImageMemoryRequirements2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetBufferMemoryRequirements2KHR:
        Decode_vkGetBufferMemoryRequirements2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetImageSparseMemoryRequirements2KHR:
        Decode_vkGetImageSparseMemoryRequirements2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateSamplerYcbcrConversionKHR:
        Decode_vkCreateSamplerYcbcrConversionKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroySamplerYcbcrConversionKHR:
        Decode_vkDestroySamplerYcbcrConversionKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkBindBufferMemory2KHR:
        Decode_vkBindBufferMemory2KHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkBindImageMemory2KHR:
        Decode_vkBindImageMemory2KHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetDescriptorSetLayoutSupportKHR:
        Decode_vkGetDescriptorSetLayoutSupportKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdDrawIndirectCountKHR:
        Decode_vkCmdDrawIndirectCountKHR(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDrawIndexedIndirectCountKHR:
        Decode_vkCmdDrawIndexedIndirectCountKHR(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateDebugReportCallbackEXT:
        Decode_vkCreateDebugReportCallbackEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDebugReportCallbackEXT:
        Decode_vkDestroyDebugReportCallbackEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDebugReportMessageEXT:
        Decode_vkDebugReportMessageEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkDebugMarkerSetObjectTagEXT:
        Decode_vkDebugMarkerSetObjectTagEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDebugMarkerSetObjectNameEXT:
        Decode_vkDebugMarkerSetObjectNameEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDebugMarkerBeginEXT:
        Decode_vkCmdDebugMarkerBeginEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDebugMarkerEndEXT:
        Decode_vkCmdDebugMarkerEndEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDebugMarkerInsertEXT:
        Decode_vkCmdDebugMarkerInsertEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdDrawIndirectCountAMD:
        Decode_vkCmdDrawIndirectCountAMD(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdDrawIndexedIndirectCountAMD:
        Decode_vkCmdDrawIndexedIndirectCountAMD(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetShaderInfoAMD:
        Decode_vkGetShaderInfoAMD(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetPhysicalDeviceExternalImageFormatPropertiesNV:
        Decode_vkGetPhysicalDeviceExternalImageFormatPropertiesNV(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_WIN32_KHR
    case ApiCallId_vkGetMemoryWin32HandleNV:
        Decode_vkGetMemoryWin32HandleNV(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_WIN32_KHR */

#ifdef VK_USE_PLATFORM_VI_NN
    case ApiCallId_vkCreateViSurfaceNN:
        Decode_vkCreateViSurfaceNN(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_VI_NN */

    case ApiCallId_vkCmdBeginConditionalRenderingEXT:
        Decode_vkCmdBeginConditionalRenderingEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdEndConditionalRenderingEXT:
        Decode_vkCmdEndConditionalRenderingEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdProcessCommandsNVX:
        Decode_vkCmdProcessCommandsNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdReserveSpaceForCommandsNVX:
        Decode_vkCmdReserveSpaceForCommandsNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateIndirectCommandsLayoutNVX:
        Decode_vkCreateIndirectCommandsLayoutNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyIndirectCommandsLayoutNVX:
        Decode_vkDestroyIndirectCommandsLayoutNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateObjectTableNVX:
        Decode_vkCreateObjectTableNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyObjectTableNVX:
        Decode_vkDestroyObjectTableNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkRegisterObjectsNVX:
        Decode_vkRegisterObjectsNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkUnregisterObjectsNVX:
        Decode_vkUnregisterObjectsNVX(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX:
        Decode_vkGetPhysicalDeviceGeneratedCommandsPropertiesNVX(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdSetViewportWScalingNV:
        Decode_vkCmdSetViewportWScalingNV(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkReleaseDisplayEXT:
        Decode_vkReleaseDisplayEXT(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_XLIB_XRANDR_EXT
    case ApiCallId_vkAcquireXlibDisplayEXT:
        Decode_vkAcquireXlibDisplayEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetRandROutputDisplayEXT:
        Decode_vkGetRandROutputDisplayEXT(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_XLIB_XRANDR_EXT */

    case ApiCallId_vkGetPhysicalDeviceSurfaceCapabilities2EXT:
        Decode_vkGetPhysicalDeviceSurfaceCapabilities2EXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkDisplayPowerControlEXT:
        Decode_vkDisplayPowerControlEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkRegisterDeviceEventEXT:
        Decode_vkRegisterDeviceEventEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkRegisterDisplayEventEXT:
        Decode_vkRegisterDisplayEventEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetSwapchainCounterEXT:
        Decode_vkGetSwapchainCounterEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetRefreshCycleDurationGOOGLE:
        Decode_vkGetRefreshCycleDurationGOOGLE(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPastPresentationTimingGOOGLE:
        Decode_vkGetPastPresentationTimingGOOGLE(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdSetDiscardRectangleEXT:
        Decode_vkCmdSetDiscardRectangleEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkSetHdrMetadataEXT:
        Decode_vkSetHdrMetadataEXT(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_IOS_MVK
    case ApiCallId_vkCreateIOSSurfaceMVK:
        Decode_vkCreateIOSSurfaceMVK(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_IOS_MVK */

#ifdef VK_USE_PLATFORM_MACOS_MVK
    case ApiCallId_vkCreateMacOSSurfaceMVK:
        Decode_vkCreateMacOSSurfaceMVK(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_MACOS_MVK */

    case ApiCallId_vkSetDebugUtilsObjectNameEXT:
        Decode_vkSetDebugUtilsObjectNameEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkSetDebugUtilsObjectTagEXT:
        Decode_vkSetDebugUtilsObjectTagEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueBeginDebugUtilsLabelEXT:
        Decode_vkQueueBeginDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueEndDebugUtilsLabelEXT:
        Decode_vkQueueEndDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkQueueInsertDebugUtilsLabelEXT:
        Decode_vkQueueInsertDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdBeginDebugUtilsLabelEXT:
        Decode_vkCmdBeginDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdEndDebugUtilsLabelEXT:
        Decode_vkCmdEndDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCmdInsertDebugUtilsLabelEXT:
        Decode_vkCmdInsertDebugUtilsLabelEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkCreateDebugUtilsMessengerEXT:
        Decode_vkCreateDebugUtilsMessengerEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyDebugUtilsMessengerEXT:
        Decode_vkDestroyDebugUtilsMessengerEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkSubmitDebugUtilsMessageEXT:
        Decode_vkSubmitDebugUtilsMessageEXT(parameter_buffer, buffer_size);
        break;

#ifdef VK_USE_PLATFORM_ANDROID_KHR
    case ApiCallId_vkGetAndroidHardwareBufferPropertiesANDROID:
        Decode_vkGetAndroidHardwareBufferPropertiesANDROID(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetMemoryAndroidHardwareBufferANDROID:
        Decode_vkGetMemoryAndroidHardwareBufferANDROID(parameter_buffer, buffer_size);
        break;
#endif /* VK_USE_PLATFORM_ANDROID_KHR */

    case ApiCallId_vkCmdSetSampleLocationsEXT:
        Decode_vkCmdSetSampleLocationsEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetPhysicalDeviceMultisamplePropertiesEXT:
        Decode_vkGetPhysicalDeviceMultisamplePropertiesEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCreateValidationCacheEXT:
        Decode_vkCreateValidationCacheEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkDestroyValidationCacheEXT:
        Decode_vkDestroyValidationCacheEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkMergeValidationCachesEXT:
        Decode_vkMergeValidationCachesEXT(parameter_buffer, buffer_size);
        break;
    case ApiCallId_vkGetValidationCacheDataEXT:
        Decode_vkGetValidationCacheDataEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkGetMemoryHostPointerPropertiesEXT:
        Decode_vkGetMemoryHostPointerPropertiesEXT(parameter_buffer, buffer_size);
        break;

    case ApiCallId_vkCmdWriteBufferMarkerAMD:
        Decode_vkCmdWriteBufferMarkerAMD(parameter_buffer, buffer_size);
        break;
